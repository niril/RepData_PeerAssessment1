for (i in ncol(x) {
means[i]<- mean(x[,i])
}
means
}
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in ncol(x)) {
means[i]<- mean(x[,i])
}
means
}
x<-matrix(1:10)
x
x<-matrix(1:10,1:10)
x
x<-matrix(1:10,2,5)
x
means(x)
columnmean(x)
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in ncol(x)) {
ncol(x)
means[i]<- mean(x[,i])
}
means
}
columnmean(x)
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in ncol(x)) {
print(i)
means[i]<- mean(x[,i])
}
means
}
columnmean(x)
columnmean <- function(x) {
means <-numeric(ncol(x))
for (i in 1:ncol(x)) {
print(i)
means[i]<- mean(x[,i])
}
means
}
columnmean(x)
}
cube <- function(x,n) {
x^3
}
cube(3)
x<-1:10
if(x>5) {
x<-0
}
f <- function(x) {
g <- function(y) {
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
f <- function(x) {
g <- function(y) {
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
x<-5
y<- if(x<3) {
N
} else {
10
}
y
h<- function(x,y = NULL, d=3L) {
z <-cbind(x,d)
if (d==3L)
return(g)
g<-g+10
g
}
h
directory = "specdata/"
data<-read.csv(directory&"1.csv")
directory = "specdata"
data
data<-read.csv(paste(directory,"1.csv"))
data<-read.csv(paste(directory,"/1.csv"))
directory = specdata
directory = specdata
data<-read.csv(paste(specdata,"/1.csv"))
data<-read.csv(paste("specdata","/1.csv"))
data<-read.csv(paste("specdata","/1.csv",sep""))
data<-read.csv(paste("specdata","/1.csv",sep=""))
data<-read.csv(paste("specdata","/001.csv",sep=""))
data<-read.csv(paste("/specdata","/001.csv",sep=""))
get(WD)
getwd
getwd()
setwd("/github/R_W2")
?pbeta
?qinf
?qunif
qunif(0.75)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
temp$X*temp$Prob
temp<-as.data.frame(temp)
temp$X*temp$Prob
temp
t(temp)
temp<-as.data.frame(t(temp)
)
temp$X*temp$Prob
sum(temp$X*temp$Prob)
(0.75*0.3)/(0.75*0.3+0.25*0.7)
(0.75*0.3)/(0.75*0.3+0.48*0.7)
qnorm(0.975)
?qnorm
qnorm(0.65)
qnorm(1)
qnorm(0.99)
vector(1:10)
x<-seq(1:10)
x
x<-seq(1:100)
y<-qnorm(0.975)/sqrt(x)
y
plot(x,y)
plot(x,y, type="l")
?qnorm
qnorm(0.5)
qnorm(1)
qnorm(0.1)
pnorm(1)
pnorm(.95)
pnorm(.95,mean=1100,sd=75)
pnorm(1100,mean=1100,sd=75)
qnorm(.95,mean=1100,sd=75)
1/sqrt(n)
1/sqrt(100)
qnorm(0.95)/0.1*75
qnorm(0.95)
qnorm(0.95)/0.1
qnorm(0.95)/sqrt(100)*75
qnorm(0.95)/sqrt(100)*75+1100
?binorm
?binom
??binom
??binorm
?pbinom
pnorm(4,5,0.5)
pnorm(4,5,0.5)*100
choose(5,4)*0,5^5
choose(5,4)*0.5^5
choose(5,5)*0.5^5
pbinom(4,5,0.5)
pbinom(4,size= 5,prob = 0.5)
pbinom(4,size= 5,prob = 0.5, lower.tail = FALSE)
pbinom(3,size= 5,prob = 0.5, lower.tail = FALSE)
?poisson
?ppois
?binomial
10/100
_qpois
?qpois
ppois(3,5)
ppois(10,5)
ppois(10,15)
1/sqrt(10)
?ppois
library("swirl")
swirl()
swirl()
?InstallCourses
install_from_swirl("Variance")
swirl()
swirl()
install_from_swirl("Variance")
swirl()
install_from_swirl("CommonDistros")
swirl()
uninstall_all_courses()
swirl()
install_from_swirl("Statistical_Inference")
swirl()
33/36
deck
52
4/52
0
3/12
3/13
4/12*2/51
2/51
33/36
deck
52
4/12
1/12
1/13
0
3/13
2/51
0.8*0.8/0.5*0.5
64%
64
0.64
mypdf
integrate(mypdf,0,1.6)
1
sqrt(0.5)
sqrt(2)
0.001*0.997
0.003*0.999
(1-0.001)*(1-0.985)
0.997*0.001/(0.001*0.997+(1-0.001)*(1-0.985))
3.5
expect_dice(1)
expect_dice
dice?high
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc,0,2)
spop
mead(spop)
mean(spop)
spop
allsam
apply(allsam,1,mean)
smeans
mean(smeans)
dice_sqr
sum(sice_sqr*pdf())
sum(sice_sqr*PDF
)
sum(dice_sqr*PDF
)
sum(dice_sqr*dice_fair)
ex2_fair<-sum(dice_sqr*dice_fair)
ex2_fair-3.5
ex2_fair-3.5^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
sqrt(120)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
swirl()
pbinom()
?pbinom
pbinom(3,5,0.8)
pbinom(2,5,0.8)
pbinom(2,5,0.8, lower.tal=FALSE)
pbinom(2,5,0.8, lower.taIl=FALSE)
pbinom(2,5,0.8, lower.tal=FALSE)
pbinom(2,5,0.8, lower.tail=FALSE)
pbinom(2,5,0.8, lower.tail=FALSE)
qnorm(0.1)
0
?qnorm
qnorm(0.975,3,2)
qnorm(0.975,3,2)
1.96*2+3
pnorm(1200,1020,50, lower.tail = FALSE)
pnorm(1200,1020,50, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE)
qnorm(0.75,1020,50)
0.53
0.53
ppois(3,10)
ppois(3,2.5*10)
ppois(3,2.5*4)
ppois(14,15)
ppois(17,15)
ppois(17,15)-ppois(14,15)
pbinom(5,1000,0.01)
ppois(5,1000*0.01)
coinPlot(10)
coinPlot(10000)
swirl()
swirl()
swirl()
qnorm(0.95)
p+c(-1,1)*qnorm(0.975)*sqrt(0.6*0.4/100)
0.6+c(-1,1)*qnorm(0.975)*sqrt(0.6*0.4/100)
binom.test(60,100,0.6)$conf.int
binom.test(60,100)$conf.int
mywald(.2)
ACCompar()
ACCompar(20)
lambda<-5/94.32
lamb<-5/94.32
5+c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
5+c(-1,1)*qnorm(0.975)*sqrt(lamb)
lamb+c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)
poisson.test(5,94.32)$conf
data(sleep)
summary(sleep)
sleep
sleepsif<-sleep[11:20]-sleep[1:10]
sleepsif<-sleep[1,11:20]-sleep[1,1:10]
sleepsif<-sleep$extra[11:20]-sleep$extra[1:10]
sleepdif
sleepsif
std(sleepsif)
sd(sleepsif)
?t.test
ppois(0,0.05, lower.tail = FALSE)
swirl()
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
qt(0.975,2)
myplot2(20)
mean(sleep)
data(sleep)
mean(sleep)
info()
mean(sleep)
sleep
g1
range(g1)
range(g2)
g2-g1
difference<-g2-g1
mean(difference)
s<-sd(difference)
mean(difference)+c(-1,1)*qt(0.975,9)*s/sqrt(10)
mn+c(-1,1)*qt(0.975,9)*s/sqrt(10)
t.test(g1,g2, paired = TRUE)$conf.int
t.test(difference)$conf.int
(8-1)*(15.34)^2+(21-1)*(18.23)^2
sp<-(8-1)*(15.34)^2+(21-1)*(18.23)^2
sp <- 7*15.34^2 + 20*18.23^2
ns<-27
sp<-sqrt(sp/ns)
c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt((var(g1)+var(g2))/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
sq
s
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired= FALSE, var.equal = TRUE)
t.test(g2,g1,paired= FALSE, var.equal = TRUE)$conf
t.test(g2,g1,paired= TRUE, var.equal = TRUE)$conf
t.test(g2,g1,paired= TRUE)$conf
15.34^2/8+18.23^2/21
num<-(15.34^2/8+18.23^2/21)^2
den<-15.34^4/8^2/7+18.23^4/21^2/20
mydf<-num/den
qt(0.975,mydf)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
sfa
s
s
10/10
32-30
2/1/4
2/10/4
(32-30)/(10/4)
15
qt(0.95,15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
mybin[7]
mybin[7]=.144 and mybin[8]=.035
8
?t.test
1100+c(-1,1)*qnorm(0.975)*30/sqrt(9)
qnorm(0.975)/sqrt(9)
-2/(qnorm(0.975)/sqrt(9))
qnorm(0.975)/sqrt(9)*3
qnorm(0.975)*3/sqrt(9)
qt(0.975,8)*3/sqrt(9)
qt(0.975,8)*2.1/sqrt(9)
qt(0.975,8)*2.6/sqrt(9)
qt(0.975,20-2)*0.64/sqrt(20)
3-5+c(1,1)*qt(0.975,20-2)*0.64/sqrt(20)
3-5+c(-1,1)*qt(0.975,20-2)*0.64/sqrt(20)
3-5+c(-1,1)*qt(0.975,20-2)*sqrt(0.64)/sqrt(20)
3-5+c(-1,1)*qt(0.95,20-2)*sqrt(0.64)/sqrt(20)
(9*0.68+9*0.60)/18
3-5+c(-1,1)*qt(0.95,18)*sqrt(0.64)*sqrt(1/5)
3-5+c(-1,1)*qt(0.975,18)*sqrt(0.64)*sqrt(1/5)
-3-1+c(-1,1)*qt(0.9,16)*1.65*sqrt(2/9)
-3-1+c(-1,1)*qt(0.95,16)*1.65*sqrt(2/9)
1100+qnorm(0.975)*c(-1,1)*30/sqrt(9)
1100+qnorm(0.95)*c(-1,1)*30/sqrt(9)
1100+qt(0.975,8)*c(-1,1)*30/sqrt(9)
sqrt((8*1.5^2+8*1.8^2)/16)
s<-sqrt((8*1.5^2+8*1.8^2)/16)
-4+c(-1,1)*qt(0.95,16)*s*sqrt(2/9)
n1 <- n2 <- 9
x1 <- -3 ##treated
x2 <- 1 ##placebo
s1 <- 1.5 ##treated
s2 <- 1.8 ##placebo
s <- sqrt(((n1 - 1) * s1^2 + (n2 - 1) * s2^2)/(n1 + n2 - 2))
(x1 - x2) + c(-1, 1) * qt(0.95, n1 + n2 - 2) * s * sqrt(1/n1 + 1/n2)
library(manipulate) mu0 = 30 myplot <- function(sigma, mua, n, alpha) {    g = ggplot(data.frame(mu = c(27, 36)), aes(x = mu))    g = g + stat_function(fun = dnorm, geom = "line", args = list(mean = mu0,         sd = sigma/sqrt(n)), size = 2, col = "red")    g = g + stat_function(fun = dnorm, geom = "line", args = list(mean = mua,         sd = sigma/sqrt(n)), size = 2, col = "blue")    xitc = mu0 + qnorm(1 - alpha) * sigma/sqrt(n)    g = g + geom_vline(xintercept = xitc, size = 3)    g } manipulate(myplot(sigma, mua, n, alpha), sigma = slider(1, 10, step = 1, initial = 4),     mua = slider(30, 35, step = 1, initial = 32), n = slider(1, 50, step = 1,         initial = 16), alpha = slider(0.01, 0.1, step = 0.01, initial = 0.05)
library(manipulate)
mu0 = 30
myplot <- function(sigma, mua, n, alpha) {    g = ggplot(data.frame(mu = c(27, 36)), aes(x = mu))    g = g + stat_function(fun = dnorm, geom = "line", args = list(mean = mu0,         sd = sigma/sqrt(n)), size = 2, col = "red")    g = g + stat_function(fun = dnorm, geom = "line", args = list(mean = mua,         sd = sigma/sqrt(n)), size = 2, col = "blue")    xitc = mu0 + qnorm(1 - alpha) * sigma/sqrt(n)    g = g + geom_vline(xintercept = xitc, size = 3)    g }
manipulate(myplot(sigma, mua, n, alpha), sigma = slider(1, 10, step = 1, initial = 4),     mua = slider(30, 35, step = 1, initial = 32), n = slider(1, 50, step = 1,         initial = 16), alpha = slider(0.01, 0.1, step = 0.01, initial = 0.05))
download.packages("manipulate")
install.packages(manipulate)
install.packages("manipulate")
library(manipulate)
mu0 = 30
myplot <- function(sigma, mua, n, alpha) {    g = ggplot(data.frame(mu = c(27, 36)), aes(x = mu))    g = g + stat_function(fun = dnorm, geom = "line", args = list(mean = mu0,         sd = sigma/sqrt(n)), size = 2, col = "red")    g = g + stat_function(fun = dnorm, geom = "line", args = list(mean = mua,         sd = sigma/sqrt(n)), size = 2, col = "blue")    xitc = mu0 + qnorm(1 - alpha) * sigma/sqrt(n)    g = g + geom_vline(xintercept = xitc, size = 3)    g }
manipulate(myplot(sigma, mua, n, alpha), sigma = slider(1, 10, step = 1, initial = 4),     mua = slider(30, 35, step = 1, initial = 32), n = slider(1, 50, step = 1,         initial = 16), alpha = slider(0.01, 0.1, step = 0.01, initial = 0.05))
library(manipulate)
mu0 = 30
myplot <- function(sigma, mua, n, alpha) {
g = ggplot(data.frame(mu = c(27, 36)), aes(x = mu))
g = g + stat_function(fun = dnorm, geom = "line", args = list(mean = mu0,
sd = sigma/sqrt(n)), size = 2, col = "red")
g = g + stat_function(fun = dnorm, geom = "line", args = list(mean = mua,
sd = sigma/sqrt(n)), size = 2, col = "blue")
xitc = mu0 + qnorm(1 - alpha) * sigma/sqrt(n)    g = g + geom_vline(xintercept = xitc, size = 3)
g }
manipulate(myplot(sigma, mua, n, alpha), sigma = slider(1, 10, step = 1, initial = 4),
mua = slider(30, 35, step = 1, initial = 32), n = slider(1, 50, step = 1,
initial = 16), alpha = slider(0.01, 0.1, step = 0.01, initial = 0.05))
?power.t.test
2/4*sqrt(16)
power.t.test(n=16,delta=2, sd=4)
power.t.test(n=16,delta=2, sd=4, alt ="one.sided")
power.t.test(n=16,delta=2, sd=4, alt ="one.sided", type = "one.sample")
power.t.test(power=0.8, n=16, sd=4, alt ="one.sided", type = "one.sample")
?pbinom
pbinom(1,20,0.05)
pbinom(1,20,0.05)
pbinom(0,20,0.05)
pbinom(2,20,0.05)
pbinom(1,20,0.05, lower.tail=FALSE)
pbinom(1,1000,0.0005, lower.tail=FALSE)
pbinom(1,10000,0.0005, lower.tail=FALSE)
pbinom(1,10000,0.05/10000, lower.tail=FALSE)
?data.frame
baseline=(140,138,150,148,135)
week2<-(132,135,151,146,130)
baseline<-(140,138,150,148,135)
week2<-c(132,135,151,146,130)
baseline<-c(140,138,150,148,135)
difference<-week2-baseline
t.test(difference)
qnorm(0.975)
c(-1,1)*qnorm(0.975)*30/sqrt(9)
1100+c(-1,1)*qnorm(0.975)*30/sqrt(9)
t.test(c(1,1,1,0))
t.test(c(1,1,0,0))
t.test(c(1,1,1,0), mean=0.5)
?t.test
t.test(c(1,1,1,0), mu=0.5)
?ppois
ppos(10/1787,1/100)
ppois(10/1787,1/100)
ppois(10,17.82)
ppois(1,1.782)
ppois(10,17.82)
?qt
qt(0.95,16)
1.8/sqrt(16)
1.74588*0.45
4/0.7856
4/(1.8/sqrt(16))
pt(0.99,16)
pt(0.999,16)
pt(0.05,16)
qt(0.05,16)
qt(0.95,16)
qt(0.99,16)
4/(1.65/sqrt(18))
qt(0.99,16)
qt(0.999,16)
qt(0.99999,16)
power.t.test(delta = 1 ,sd = 4,power = 0.8, type = "one.sample", alt = "one-sided")
power.t.test(delta = 1 ,sd = 4,power = 0.8, type = "one.sample", alt = "one.sided")
?power.t.test
power.t.test(delta = 1 ,sd = 4,power = 0.9, type = "one.sample", alt = "one.sided")
power.t.test(n=100, delta = 1 ,sd = 4, type = "one.sample", alt = "one.sided")
1100+c(-1,1)*qnorm(0.975)*30/sqrt(9)
1100+c(-1,1)*qt(0.975,8)*30/sqrt(9)
setwd("~/GitHub/RepData_PeerAssessment1")
```{r echo=TRUE}
setwd("~/GitHub/RepData_PeerAssessment1")
